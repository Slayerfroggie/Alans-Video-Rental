//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VideoRental.RentalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rental", Namespace="http://schemas.datacontract.org/2004/07/VRWebServiceLibrary.Model")]
    [System.SerializableAttribute()]
    public partial class Rental : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateRentedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateReturnedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RentalIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateRented {
            get {
                return this.DateRentedField;
            }
            set {
                if ((this.DateRentedField.Equals(value) != true)) {
                    this.DateRentedField = value;
                    this.RaisePropertyChanged("DateRented");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReturned {
            get {
                return this.DateReturnedField;
            }
            set {
                if ((this.DateReturnedField.Equals(value) != true)) {
                    this.DateReturnedField = value;
                    this.RaisePropertyChanged("DateReturned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RentalId {
            get {
                return this.RentalIdField;
            }
            set {
                if ((this.RentalIdField.Equals(value) != true)) {
                    this.RentalIdField = value;
                    this.RaisePropertyChanged("RentalId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RentalService.IRentalService")]
    public interface IRentalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetRentals", ReplyAction="http://tempuri.org/IRentalService/GetRentalsResponse")]
        System.Collections.Generic.List<VideoRental.RentalService.Rental> GetRentals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetRentals", ReplyAction="http://tempuri.org/IRentalService/GetRentalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<VideoRental.RentalService.Rental>> GetRentalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetRental", ReplyAction="http://tempuri.org/IRentalService/GetRentalResponse")]
        VideoRental.RentalService.Rental GetRental(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetRental", ReplyAction="http://tempuri.org/IRentalService/GetRentalResponse")]
        System.Threading.Tasks.Task<VideoRental.RentalService.Rental> GetRentalAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/PutRental", ReplyAction="http://tempuri.org/IRentalService/PutRentalResponse")]
        bool PutRental(int Id, VideoRental.RentalService.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/PutRental", ReplyAction="http://tempuri.org/IRentalService/PutRentalResponse")]
        System.Threading.Tasks.Task<bool> PutRentalAsync(int Id, VideoRental.RentalService.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/PostRental", ReplyAction="http://tempuri.org/IRentalService/PostRentalResponse")]
        int PostRental(VideoRental.RentalService.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/PostRental", ReplyAction="http://tempuri.org/IRentalService/PostRentalResponse")]
        System.Threading.Tasks.Task<int> PostRentalAsync(VideoRental.RentalService.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/DeleteRental", ReplyAction="http://tempuri.org/IRentalService/DeleteRentalResponse")]
        bool DeleteRental(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/DeleteRental", ReplyAction="http://tempuri.org/IRentalService/DeleteRentalResponse")]
        System.Threading.Tasks.Task<bool> DeleteRentalAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRentalServiceChannel : VideoRental.RentalService.IRentalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RentalServiceClient : System.ServiceModel.ClientBase<VideoRental.RentalService.IRentalService>, VideoRental.RentalService.IRentalService {
        
        public RentalServiceClient() {
        }
        
        public RentalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RentalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<VideoRental.RentalService.Rental> GetRentals() {
            return base.Channel.GetRentals();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<VideoRental.RentalService.Rental>> GetRentalsAsync() {
            return base.Channel.GetRentalsAsync();
        }
        
        public VideoRental.RentalService.Rental GetRental(int Id) {
            return base.Channel.GetRental(Id);
        }
        
        public System.Threading.Tasks.Task<VideoRental.RentalService.Rental> GetRentalAsync(int Id) {
            return base.Channel.GetRentalAsync(Id);
        }
        
        public bool PutRental(int Id, VideoRental.RentalService.Rental rental) {
            return base.Channel.PutRental(Id, rental);
        }
        
        public System.Threading.Tasks.Task<bool> PutRentalAsync(int Id, VideoRental.RentalService.Rental rental) {
            return base.Channel.PutRentalAsync(Id, rental);
        }
        
        public int PostRental(VideoRental.RentalService.Rental rental) {
            return base.Channel.PostRental(rental);
        }
        
        public System.Threading.Tasks.Task<int> PostRentalAsync(VideoRental.RentalService.Rental rental) {
            return base.Channel.PostRentalAsync(rental);
        }
        
        public bool DeleteRental(int Id) {
            return base.Channel.DeleteRental(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRentalAsync(int Id) {
            return base.Channel.DeleteRentalAsync(Id);
        }
    }
}
